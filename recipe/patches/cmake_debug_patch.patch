Index: pytorch/cmake/Modules/FindMKLDNN.cmake
===================================================================
--- pytorch.orig/cmake/Modules/FindMKLDNN.cmake
+++ pytorch/cmake/Modules/FindMKLDNN.cmake
@@ -15,21 +15,42 @@
 IF(NOT MKLDNN_FOUND)
   SET(MKLDNN_LIBRARIES)
   SET(MKLDNN_INCLUDE_DIR)
-
+  MESSAGE(STATUS "PROJECT_SOURCE_DIR: ${PROJECT_SOURCE_DIR}")
+  IF(EXISTS "${PROJECT_SOURCE_DIR}")
+    MESSAGE(STATUS "PROJECT_SOURCE_DIR EXISTS")
+  ELSE()
+    MESSAGE(STATUS "PROJECT_SOURCE_DIR DOES NOT EXIST")
+  ENDIF()
   SET(IDEEP_ROOT "${PROJECT_SOURCE_DIR}/third_party/ideep")
   SET(MKLDNN_ROOT "${PROJECT_SOURCE_DIR}/third_party/ideep/mkl-dnn/third_party/oneDNN")
+  IF(EXISTS "${IDEEP_ROOT}")
+    MESSAGE(STATUS "IDEEP_ROOT EXISTS")
+  ELSE()
+    MESSAGE(STATUS "IDEEP_ROOT DOES NOT EXIST")
+  ENDIF()
+  IF(EXISTS "${MKLDNN_ROOT}")
+    MESSAGE(STATUS "MKLDNN_ROOT EXISTS")
+  ELSE()
+    MESSAGE(STATUS "MKLDNN_ROOT DOES NOT EXIST")
+  ENDIF()
   IF(NOT APPLE AND NOT WIN32 AND NOT BUILD_LITE_INTERPRETER)
     MESSAGE("-- Will build oneDNN Graph")
     SET(LLGA_ROOT "${PROJECT_SOURCE_DIR}/third_party/ideep/mkl-dnn")
     SET(BUILD_ONEDNN_GRAPH ON)
   ENDIF(NOT APPLE AND NOT WIN32 AND NOT BUILD_LITE_INTERPRETER)
-
+  MESSAGE(STATUS "IDEEP_ROOT: ${IDEEP_ROOT}")
+  MESSAGE(STATUS "MKLDNN_ROOT: ${MKLDNN_ROOT}")
+  MESSAGE(STATUS "CMAKE_PREFIX_PATH: ${CMAKE_PREFIX_PATH}")
+  MESSAGE(STATUS "CMAKE_FIND_ROOT_PATH: ${CMAKE_FIND_ROOT_PATH}")
   FIND_PACKAGE(BLAS)
-  FIND_PATH(IDEEP_INCLUDE_DIR ideep.hpp PATHS ${IDEEP_ROOT} PATH_SUFFIXES include)
-  FIND_PATH(MKLDNN_INCLUDE_DIR dnnl.hpp dnnl.h PATHS ${MKLDNN_ROOT} PATH_SUFFIXES include)
+  FIND_PATH(IDEEP_INCLUDE_DIR ideep.hpp PATHS ${IDEEP_ROOT} PATH_SUFFIXES include NO_DEFAULT_PATH)
+  FIND_PATH(MKLDNN_INCLUDE_DIR dnnl.hpp dnnl.h PATHS ${MKLDNN_ROOT} PATH_SUFFIXES include NO_DEFAULT_PATH)
+  MESSAGE(STATUS "IDEEP_INCLUDE_DIR: ${IDEEP_INCLUDE_DIR}")
+  MESSAGE(STATUS "MKLDNN_INCLUDE_DIR: ${MKLDNN_INCLUDE_DIR}")
   IF(NOT MKLDNN_INCLUDE_DIR)
     EXECUTE_PROCESS(COMMAND git${CMAKE_EXECUTABLE_SUFFIX} submodule update --init --jobs 0 mkl-dnn WORKING_DIRECTORY ${IDEEP_ROOT})
     FIND_PATH(MKLDNN_INCLUDE_DIR dnnl.hpp dnnl.h PATHS ${MKLDNN_ROOT} PATH_SUFFIXES include)
+    MESSAGE(STATUS "MKLDNN_INCLUDE_DIR 2: ${MKLDNN_INCLUDE_DIR}")
   ENDIF(NOT MKLDNN_INCLUDE_DIR)
   IF(BUILD_ONEDNN_GRAPH)
     FIND_PATH(LLGA_INCLUDE_DIR oneapi/dnnl/dnnl_graph.hpp PATHS ${LLGA_ROOT} PATH_SUFFIXES include)
